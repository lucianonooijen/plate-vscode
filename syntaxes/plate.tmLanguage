<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>plate</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x){%\s*(if|unless|for|paginate|capture|form|case|tablerow|raw|comment)[^(%})]+%}</string>
	<key>foldingStopMarker</key>
	<string>(?x){%\s*(endif|endunless|endfor|endpaginate|endcapture|endform|endcase|endtablerow|endraw|endcomment)[^(%})]+%}</string>
	<key>name</key>
	<string>HTML (Plate)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>{%-?\s*comment\s*-?%}</string>
			<key>end</key>
			<string>{%-?\s*endcomment\s*-?%}</string>
			<key>name</key>
			<string>comment.block.plate</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>{{-?</string>
			<key>end</key>
			<string>-?}}</string>
			<key>name</key>
			<string>punctuation.output.plate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template_var</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>{%-?</string>
			<key>end</key>
			<string>-?%}</string>
			<key>name</key>
			<string>punctuation.tag.plate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template_tag_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template_var</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.basic</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assign_op</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.plate</string>
				</dict>
			</array>
		</dict>
		<key>logic_expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.augmented.plate</string>
				</dict>
			</array>
		</dict>
		<key>logic_op</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\s+(and|or|not|contains|(\!\=|\=\=|&lt;\=|&gt;\=|&lt;|&gt;)\s+</string>
					<key>name</key>
					<string>keyword.operator.logical.plate</string>
				</dict>
			</array>
		</dict>
		<key>template_tag_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;={%)\s*(\w+)</string>
					<key>name</key>
					<string>entity.name.tag.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;={%-)\s*(\w+)</string>
					<key>name</key>
					<string>entity.name.tag.plate</string>
				</dict>
			</array>
		</dict>
		<key>template_var</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.filter.plate</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.filter.plate</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)(\|)(?=[^\]]*)(?=\])</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)(\+|\-|\/|\*)(?=\s)</string>
					<key>name</key>
					<string>invalid.illegal.filter.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(false|true|nil)</string>
					<key>name</key>
					<string>constant.language.plate</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.operator.plate</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?=if|unless|elsif)\s*[^%}]+\s(in)\s</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\s+(and|or|not|contains|in|by|((\!|\=|\&lt;|\&gt;)\=))\s+</string>
					<key>name</key>
					<string>keyword.operator.plate</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.assignment.plate</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=assign)([^\=]+)(\=\=+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\s+(?![\.0-9])[a-zA-Z0-9_-]+\:\s+</string>
					<key>name</key>
					<string>support.function.with-args.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\s+(?![\.0-9])[a-zA-Z0-9_-]+\s+</string>
					<key>name</key>
					<string>support.function.without-args.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)(with|offset\:|limit\:)(?=\s)</string>
					<key>name</key>
					<string>keyword.control.plate</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.argument.plate</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=include)(.*)(with\:|offset|limit)(?=\s)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s)(\w+\:)(?=\:\s)</string>
					<key>name</key>
					<string>invalid.illegal.plate</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.plate</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(-|\+)?\s*[0-9]+(\.[0-9]+)?</string>
					<key>name</key>
					<string>constant.numeric.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(collection|product|linklist|linklists|order|link|customer|customer_address|line_item|shop|collections|page_title|template|image|blog|blogs|cart|pages|theme|themes|variant|items|comment|forloop|settings)\b</string>
					<key>name</key>
					<string>support.class.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(assets|author|body|body_raw|current|date|excerpt_raw|meta|next|pages|parent|posts|previous|site|tags|taxonomy|title|url)\b</string>
					<key>name</key>
					<string>support.class.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?&lt;=\w\:\s)\w+)</string>
					<key>name</key>
					<string>variable.parameter.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\.)\w+\b</string>
					<key>name</key>
					<string>support.variable.plate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+</string>
					<key>name</key>
					<string>variable.other.plate</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.html.plate</string>
	<key>uuid</key>
	<string>f2a39460-98fd-11e1-a8b0-0800200c9a66</string>
</dict>
</plist>
